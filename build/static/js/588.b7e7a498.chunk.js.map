{"version":3,"file":"static/js/588.b7e7a498.chunk.js","mappings":"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","sources":["@crema/core/Form/FormInput.jsx","@crema/core/Form/FormInputNumber.jsx","pages/sample/Landmark/LandmarkPostEdit.jsx"],"sourcesContent":["import React from 'react';\nimport {Form, Input} from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst FormInput = ({label,name,required,required_text,warning}) => {\n    return (\n        <Form.Item\n            label={warning ? <div>\n                <p>{label}</p>\n                <br/>\n                <p>{warning}</p>\n            </div>:<div>{label}</div>}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <Input />\n        </Form.Item>\n    );\n};\n\nexport default FormInput;\n\nFormInput.propTypes = {\n    label: PropTypes.string,\n    warning: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import React from 'react';\nimport {Form,  InputNumber} from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst FormInputNumber = ({label,name,required,required_text}) => {\n    return (\n        <Form.Item\n            label={label}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <InputNumber style={{width:'100%'}}/>\n        </Form.Item>\n    );\n};\n\nexport default FormInputNumber;\n\nFormInputNumber.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import React, {useEffect, useMemo, useState} from 'react';\nimport {Button, Col, Form, message, Row, Upload, Typography, Select} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport ImgCrop from \"antd-img-crop\";\nimport {MinusCircleOutlined} from \"@ant-design/icons\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport FormInput from \"../../../@crema/core/Form/FormInput\";\nimport FormInputNumber from \"../../../@crema/core/Form/FormInputNumber\";\n\nconst {Title} = Typography\n\n\nconst initialValueForm = {\n    image: [],\n    title_uz: \"\",\n    title_ru: \"\",\n    title_en: \"\",\n    landmarks: [\n        {\n            distance: \"\",\n            distance_type: \"\",\n            title_uz: \"\",\n            title_ru: \"\",\n            title_en: \"\",\n        }\n    ],\n\n};\n\n\nconst LandmarkPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n    const [fileListProps, setFileListProps] = useState([]);\n\n\n\n\n\n\n    // query-image\n    const {\n        mutate: imagesUploadMutate,\n        data: imagesUpload,\n        isLoading: imagesUploadLoading,\n        isSuccess: imagesUploadSuccess,\n    } = useMutation(({url, formData}) => apiService.postData(url, formData), {\n\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n\n    // query-landmark\n    const {\n        mutate: postLandmarkMutate,\n        data: postLandmark,\n        isLoading: postLandmarkLoading,\n        isSuccess: postLandmarkSuccess,\n\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editLandmarkLoading,\n        data: editLandmarkData,\n        refetch: editLandmarkRefetch,\n        isSuccess: editLandmarkSuccess,\n\n    } = useQuery([\"edit-landmark\", editId], () => apiService.getDataByID(\"/landmarkcategories\", editId), {\n        enabled: false\n    });\n\n\n    // put-query\n    const {\n        mutate: putLandmark,\n        isLoading: putLandmarkLoading,\n        data: putData,\n        isSuccess: putLandmarkSuccess\n    } = useMutation(({\n                         url, data, id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // delete image\n\n    const {mutate: imagesDeleteMutate} = useMutation(({url, ids}) => apiService.deleteImages(url, ids), {\n        onSuccess: () => message.success('Success'),\n        onError: (error) => message.error(error.message)\n    });\n\n    //                                              =====useEffect====\n\n    // landmark success\n    useEffect(() => {\n        if (putLandmarkSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n        if (postLandmarkSuccess || putLandmarkSuccess) {\n            navigate('/landmark')\n        }\n    }, [postLandmark, putData])\n\n    // if edit landmark\n    useEffect(() => {\n        if (editId !== \"\") {\n            editLandmarkRefetch();\n        }\n    }, [editId]);\n\n    // if no edit landmark\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n    //edit landmark\n    useEffect(() => {\n        let image=null\n        if (editLandmarkData !== undefined) {\n                image = [{\n                    uid: editLandmarkData?.image.id,\n                    name: editLandmarkData?.image.id,\n                    status: \"done\",\n                    url: editLandmarkData?.image.image\n                }]\n\n        }\n\n        if (editLandmarkSuccess) {\n\n            const edit = {\n                title_uz: editLandmarkData?.title_uz,\n                title_ru: editLandmarkData?.title_ru,\n                title_en: editLandmarkData?.title_en,\n                image:editLandmarkData?.image?.id,\n                landmarks: editLandmarkData?.landmarks,\n            }\n\n\n            setFileListProps(image);\n            form.setFieldsValue(edit)\n        }\n\n    }, [editLandmarkData])\n    const onFinish = (values) => {\n        const data = {\n            image:fileListProps[0]?.uid,\n            title_uz: values.title_uz,\n            title_ru: values.title_ru,\n            title_en: values.title_en,\n            landmarks: values?.landmarks,\n\n        };\n        console.log(data)\n        if (editLandmarkSuccess) {\n            putLandmark({url: \"/landmarkcategories\", data, id: editId});\n        } else {\n            postLandmarkMutate({url: \"/landmarkcategories/\", data});\n        }\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem('myFormValues', JSON.stringify(form.getFieldsValue()),);\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n    // image\n    useEffect(() => {\n        if (imagesUploadSuccess) {\n            const uploadImg = [{\n                uid: imagesUpload?.images[0]?.id,\n                name: imagesUpload?.images[0]?.id,\n                status: \"done\",\n                url: imagesUpload?.images[0]?.url\n            }]\n            form.setFieldsValue({image: uploadImg});\n            setFileListProps(uploadImg);\n        }\n    }, [imagesUpload]);\n\n    const onChangeImage = ({fileList: newFileList}) => {\n        const formData = new FormData();\n        if (newFileList.length !== 0) {\n            formData.append(\"uploaded_images\", newFileList[0].originFileObj);\n            imagesUploadMutate({url: \"/images/\", formData});\n        }\n\n    };\n\n    const handleRemoveImage = (file) => {\n        // const withoutDeleteImage = []\n        //\n        // fileListProps.map((image) => {\n        //     if (image?.uid !== file?.uid) {\n        //         withoutDeleteImage.push(image)\n        //     }\n        // })\n        // if (!withoutDeleteImage.length > 0) {\n        // }\n        const ids = {\n            image_ids: [file?.uid]\n        }\n        imagesDeleteMutate({url: \"/images/delete\", ids});\n        setFileListProps([])\n        form.setFieldsValue({image: []});\n\n    }\n\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n\n\n    // selection\n    const optionDistance = useMemo(() => {\n        return [\n            {\n                value: 'km',\n                label: 'Км',\n            },\n            {\n                value: 'm',\n                label: 'М',\n            },\n        ]\n    }, []);\n\n\n\n\n    return (<div>\n        {(postLandmarkLoading || editLandmarkLoading || putLandmarkLoading || imagesUploadLoading) ? <AppLoader/> :\n            <Form\n                form={form}\n                name=\"basic\"\n                labelCol={{\n                    span: 24\n                }}\n                wrapperCol={{\n                    span: 24\n                }}\n                style={{\n                    maxWidth: \"100%\"\n                }}\n                initialValues={initialValueForm}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n\n\n                <Row gutter={20}>\n\n                    <Col span={8}>\n                        <FormInput\n                            required={true}\n                            required_text={'Необходимо ввести заголовок'}\n                            label={'Заголовок Ru'}\n                            name={'title_ru'}\n                        />\n\n                    </Col>\n                    <Col span={8}>\n                        <FormInput\n                            required={true}\n                            required_text={'Sarlavha kiritish kerak'}\n                            label={'Sarlavha Uz'}\n                            name={'title_uz'}\n                        />\n\n\n                    </Col>\n                    <Col span={8}>\n                        <FormInput\n                            required={true}\n                            required_text={'A title is required'}\n                            label={'Title En'}\n                            name={'title_en'}\n                        />\n\n                    </Col>\n                </Row>\n                <Row gutter={20}>\n                    <Col span={12}>\n                        <Form.Item\n                            label='Изображение'\n                            name={'image'}\n                            rules={[{required: true, message: 'Требуется изображение'}]}>\n                            <ImgCrop>\n                                <Upload\n                                    maxCount={1}\n                                    fileList={fileListProps}\n                                    listType='picture-card'\n                                    onChange={onChangeImage}\n                                    onPreview={onPreview}\n                                    onRemove={handleRemoveImage}\n                                    beforeUpload={() => false}\n                                >\n                                    {fileListProps.length > 0 ? \"\" : \"Upload\"}\n                                </Upload>\n                            </ImgCrop>\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Title level={3}>Ориентиры поблизости</Title>\n                <Form.List name=\"landmarks\">\n                    {(fields, {add, remove}) => (\n                        <>\n                            {fields.map((field, index) => {\n                                return (\n                                    <div key={field.fieldKey} style={{marginBottom: 20}}>\n                                        <Row gutter={20}>\n\n                                            <Col span={8}>\n                                                <FormInput\n                                                    required={true}\n                                                    required_text={'Укажите название местоположения.'}\n                                                    label={`Название местоположения Ru ${index + 1}`}\n                                                    name={[field.name, 'title_ru']}\n                                                />\n                                            </Col>\n                                            <Col span={8}>\n                                                <FormInput\n                                                    required={true}\n                                                    required_text={'Joylashuv nomi kiritish talab qilinadi'}\n                                                    label={`Joylashuv nomi Uz ${index + 1}`}\n                                                    name={[field.name, 'title_uz']}\n                                                />\n                                            </Col>\n                                            <Col span={8}>\n                                                <FormInput\n                                                    required={true}\n                                                    required_text={'A location name is required'}\n                                                    label={`Location name En ${index + 1}`}\n                                                    name={[field.name, 'title_en']}\n                                                />\n                                            </Col>\n                                            <Col span={12}>\n                                                <FormInputNumber\n                                                    required={true}\n                                                    required_text={'Требуется интервал'}\n                                                    label={`Расстояние между ${index + 1}`}\n                                                    name={[field.name, 'distance']}\n                                                />\n                                            </Col>\n                                            <Col span={12}>\n                                                <Form.Item\n                                                    label={'Единица расстояния'}\n                                                    name={[field.name,'distance_type']}\n                                                    rules={[{\n                                                        required: true, message: 'Вы должны выбрать'\n                                                    }]}\n                                                    wrapperCol={{\n                                                        span: 24,\n                                                    }}\n                                                >\n                                                    <Select\n                                                        style={{\n                                                            width: '100%',\n                                                        }}\n                                                        placeholder='Выберите единицу измерения расстояния'\n                                                        optionLabelProp='label'\n                                                        options={optionDistance}\n                                                    />\n                                                </Form.Item>\n\n                                            </Col>\n                                        </Row>\n                                        <MinusCircleOutlined onClick={() => remove(field.name)}/>\n                                    </div>\n\n                                );\n                            })}\n                            <Form.Item>\n                                <Button type=\"primary\" onClick={() => add()} block\n                                        style={{backgroundColor: '#28a745'}}>\n                                    Открыть новый раздел для характеристика\n                                </Button>\n                            </Form.Item>\n\n                        </>\n                    )}\n                </Form.List>\n\n\n\n\n                <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                    {editLandmarkSuccess ? 'Изменить продукт' : 'Создать продукт'}\n                </Button>\n            </Form>}\n    </div>);\n};\n\nexport default LandmarkPostEdit;"],"names":["_ref","label","name","required","required_text","warning","_jsx","Form","Item","_jsxs","children","rules","message","Input","InputNumber","style","width","Title","Typography","initialValueForm","image","title_uz","title_ru","title_en","landmarks","distance","distance_type","LandmarkPostEdit","form","useForm","navigate","useNavigate","editId","useSelector","state","editData","dispatch","useDispatch","fileListProps","setFileListProps","useState","mutate","imagesUploadMutate","data","imagesUpload","isLoading","imagesUploadLoading","isSuccess","imagesUploadSuccess","useMutation","url","formData","apiService","postData","onSuccess","success","onError","error","obj","response","concat","postLandmarkMutate","postLandmark","postLandmarkLoading","postLandmarkSuccess","_ref2","editLandmarkLoading","editLandmarkData","refetch","editLandmarkRefetch","editLandmarkSuccess","useQuery","getDataByID","enabled","putLandmark","putLandmarkLoading","putData","putLandmarkSuccess","_ref3","id","imagesDeleteMutate","_ref4","ids","deleteImages","useEffect","type","EDIT_DATA","payload","setFieldsValue","undefined","uid","status","_editLandmarkData$ima","edit","storedValues","JSON","parse","localStorage","getItem","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","_imagesUpload$images$","_imagesUpload$images$2","_imagesUpload$images$3","uploadImg","optionDistance","useMemo","value","AppLoader","labelCol","span","wrapperCol","maxWidth","initialValues","onFinish","values","_fileListProps$","console","log","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","FormInput","ImgCrop","Upload","maxCount","fileList","listType","onChange","_ref5","newFileList","FormData","length","append","originFileObj","onPreview","async","src","file","Promise","resolve","reader","FileReader","readAsDataURL","onload","result","Image","imgWindow","open","document","write","outerHTML","onRemove","image_ids","beforeUpload","level","List","fields","_ref6","add","remove","_Fragment","map","field","index","marginBottom","FormInputNumber","Select","placeholder","optionLabelProp","options","MinusCircleOutlined","onClick","fieldKey","Button","block","backgroundColor","htmlType","marginTop"],"sourceRoot":""}