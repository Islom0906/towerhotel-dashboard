{"version":3,"file":"static/js/976.f595ee0b.chunk.js","mappings":"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","sources":["@crema/core/Form/FormInput.jsx","@crema/core/Form/FormTextArea.jsx","pages/sample/About Index/AboutHeaderPostEdit.jsx"],"sourcesContent":["import React from 'react';\nimport {Form, Input} from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst FormInput = ({label,name,required,required_text,warning}) => {\n    return (\n        <Form.Item\n            label={warning ? <div>\n                <p>{label}</p>\n                <br/>\n                <p>{warning}</p>\n            </div>:<div>{label}</div>}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <Input />\n        </Form.Item>\n    );\n};\n\nexport default FormInput;\n\nFormInput.propTypes = {\n    label: PropTypes.string,\n    warning: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import React from 'react';\nimport {Form } from \"antd\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport PropTypes from \"prop-types\";\n\nconst FormTextArea = ({label,name,required,required_text}) => {\n    return (\n        <Form.Item\n            label={label}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <TextArea rows={4}/>\n        </Form.Item>\n    );\n};\n\nexport default FormTextArea;\n\nFormTextArea.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import React, {useEffect,  useState} from 'react';\nimport {Button, Col, Form,  message,  Row,  Upload} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport ImgCrop from \"antd-img-crop\";\nimport FormInput from \"../../../@crema/core/Form/FormInput\";\nimport FormTextArea from \"../../../@crema/core/Form/FormTextArea\";\n\nconst initialValueForm = {\n    image_1:[],\n    image_2:[],\n    title_ru:\"\",\n    title_uz:\"\",\n    title_en:\"\",\n    sub_title_ru:\"\",\n    sub_title_uz:\"\",\n    sub_title_en:\"\",\n};\n\n\n\n\nconst AboutHeaderPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n    const [fileListProps1, setFileListProps1] = useState([])\n    const [fileListProps2, setFileListProps2] = useState([])\n\n\n\n\n\n    // query-about-index\n    const {\n        mutate: postAboutIndexMutate,\n        data: postAboutIndex,\n        isLoading: postAboutIndexLoading,\n        isSuccess: postAboutIndexSuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editAboutIndexLoading,\n        data: editAboutIndexData,\n        refetch: editAboutIndexRefetch,\n        isSuccess: editAboutIndexSuccess,\n    } = useQuery([\"edit-about-index\", editId], () => apiService.getDataByID(\"/pages/about/index\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putAboutIndex,\n        isLoading: putAboutIndexLoading,\n        data: putData,\n        isSuccess: putAboutIndexSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // about-index success\n    useEffect(() => {\n        if (putAboutIndexSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n\n        if (postAboutIndexSuccess || putAboutIndexSuccess) {\n\n            navigate('/about-index')\n        }\n    }, [postAboutIndex, putData])\n\n\n    // if edit contact\n    useEffect(() => {\n        if (editId !== \"\") {\n            editAboutIndexRefetch();\n        }\n    }, [editId]);\n\n    // if no edit about-index\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n    //edit about-index\n    useEffect(() => {\n        if (editAboutIndexSuccess) {\n\n            const image_1=[{\n                uid: editAboutIndexData.id,\n                name: editAboutIndexData.id,\n                status: \"done\",\n                url: editAboutIndexData.image_1\n            }];\n\n            const image_2=[{\n                uid: editAboutIndexData.id,\n                name: editAboutIndexData.id,\n                status: \"done\",\n                url: editAboutIndexData.image_2\n            }];\n\n\n            const edit = {\n                image_1,\n                image_2,\n                title_ru:editAboutIndexData.title_ru,\n                title_uz:editAboutIndexData.title_uz,\n                title_en:editAboutIndexData.title_en,\n                sub_title_ru:editAboutIndexData.sub_title_ru,\n                sub_title_uz:editAboutIndexData.sub_title_uz,\n                sub_title_en:editAboutIndexData.sub_title_en,\n            }\n\n\n            setFileListProps1(image_1)\n            setFileListProps2(image_2)\n            form.setFieldsValue(edit)\n        }\n\n    }, [editAboutIndexData])\n\n\n    const onFinish = (values) => {\n\n\n        const formData = new FormData();\n\n        formData.append('title_ru', values.title_ru);\n        formData.append('title_uz', values.title_uz);\n        formData.append('title_en', values.title_en);\n        formData.append('sub_title_ru', values.sub_title_ru);\n        formData.append('sub_title_uz', values.sub_title_uz);\n        formData.append('sub_title_en', values.sub_title_en);\n\n        if (fileListProps1[0]?.originFileObj) {\n            formData.append('image_1', fileListProps1[0]?.originFileObj);\n        }\n\n        if (fileListProps2[0]?.originFileObj) {\n            formData.append('image_2', fileListProps2[0]?.originFileObj);\n        }\n\n\n        if (editAboutIndexData) {\n            putAboutIndex({url: '/pages/about/index', data: formData, id: editId})\n        } else {\n            postAboutIndexMutate({url: \"/pages/about/index/\", data: formData});\n        }\n\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem(\n                'myFormValues',\n                JSON.stringify(form.getFieldsValue()),\n            );\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n\n    // image\n    const onChangeImage_1 = ({fileList: newFileList}) => {\n        setFileListProps1(newFileList);\n        form.setFieldsValue({image_1: newFileList});\n    };\n\n    const onChangeImage_2 = ({fileList: newFileList}) => {\n        setFileListProps2(newFileList);\n        form.setFieldsValue({image_2: newFileList});\n    };\n\n\n\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n\n\n    return (\n        <div>\n            {(postAboutIndexLoading || editAboutIndexLoading || putAboutIndexLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={8}>\n                            <FormInput\n                                required={true}\n                                required_text={'Необходимо ввести заголовок'}\n                                label={'Title Ru'}\n                                name={'title_ru'}\n                            />\n\n                        </Col>\n                        <Col span={8}>\n                            <FormInput\n                                required={true}\n                                required_text={'Sarlavha kiritish kerak'}\n                                label={'Title Uz'}\n                                name={'title_uz'}\n                            />\n\n                        </Col>\n                        <Col span={8}>\n                            <FormInput\n                                required={true}\n                                required_text={'A title must be entered'}\n                                label={'Title En'}\n                                name={'title_en'}\n                            />\n\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n\n                        <Col span={24}>\n                            <FormTextArea\n                                required={true}\n                                required_text={'Требуется дополнительный заголовок'}\n                                label={'Подзаголовок Ru'}\n                                name={'sub_title_ru'}\n                            />\n\n                        </Col>\n                        <Col span={24}>\n                            <FormTextArea\n                                required={true}\n                                required_text={'Qo\\'shimcha sarlavha talab qilinadi'}\n                                label={'Qo\\'shimcha Sarlavha Uz'}\n                                name={'sub_title_uz'}\n                            />\n\n\n                        </Col>\n                        <Col span={24}>\n                            <FormTextArea\n                                required={true}\n                                required_text={'An additional title is required'}\n                                label={'Sub Title En'}\n                                name={'sub_title_en'}\n                            />\n\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Изображение'\n                                name={'image_1'}\n                                rules={[{required: true, message: 'Требуется изображение.'}]}>\n                                <ImgCrop rotationSlider>\n                                    <Upload\n                                        maxCount={1}\n                                        fileList={fileListProps1}\n                                        listType='picture-card'\n                                        onChange={onChangeImage_1}\n                                        onPreview={onPreview}\n                                        beforeUpload={() => false}\n                                    >\n                                        {fileListProps1.length > 0 ? \"\" : \"Upload\"}\n                                    </Upload>\n                                </ImgCrop>\n                            </Form.Item>\n                        </Col>\n\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Изображение баннера'\n                                name={'image_2'}\n                                rules={[{required: true, message: 'Требуется изображение баннера.'}]}>\n                                <ImgCrop rotationSlider>\n                                    <Upload\n                                        maxCount={1}\n                                        fileList={fileListProps2}\n                                        listType='picture-card'\n                                        onChange={onChangeImage_2}\n                                        onPreview={onPreview}\n                                        beforeUpload={() => false}\n                                    >\n                                        {fileListProps2.length > 0 ? \"\" : \"Upload\"}\n                                    </Upload>\n                                </ImgCrop>\n                            </Form.Item>\n                        </Col>\n\n                    </Row>\n\n\n\n\n\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                        {\n                            editAboutIndexSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default AboutHeaderPostEdit;"],"names":["_ref","label","name","required","required_text","warning","_jsx","Form","Item","_jsxs","children","rules","message","Input","TextArea","rows","initialValueForm","image_1","image_2","title_ru","title_uz","title_en","sub_title_ru","sub_title_uz","sub_title_en","AboutHeaderPostEdit","form","useForm","navigate","useNavigate","editId","useSelector","state","editData","dispatch","useDispatch","fileListProps1","setFileListProps1","useState","fileListProps2","setFileListProps2","mutate","postAboutIndexMutate","data","postAboutIndex","isLoading","postAboutIndexLoading","isSuccess","postAboutIndexSuccess","useMutation","url","apiService","postData","onSuccess","success","onError","error","obj","response","concat","editAboutIndexLoading","editAboutIndexData","refetch","editAboutIndexRefetch","editAboutIndexSuccess","useQuery","getDataByID","enabled","putAboutIndex","putAboutIndexLoading","putData","putAboutIndexSuccess","_ref2","id","useEffect","type","EDIT_DATA","payload","setFieldsValue","uid","status","edit","storedValues","JSON","parse","localStorage","getItem","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","onPreview","async","src","file","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","open","document","write","outerHTML","AppLoader","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","_fileListProps1$","_fileListProps2$","formData","FormData","_fileListProps1$2","_fileListProps2$2","append","onFinishFailed","errorInfo","console","log","autoComplete","Row","gutter","Col","FormInput","FormTextArea","ImgCrop","rotationSlider","Upload","maxCount","fileList","listType","onChange","_ref3","newFileList","beforeUpload","length","_ref4","Button","htmlType","width","marginTop"],"sourceRoot":""}